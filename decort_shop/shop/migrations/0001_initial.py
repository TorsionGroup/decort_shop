# Generated by Django 3.1.3 on 2020-11-29 11:22

import creditcards.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import phonenumber_field.modelfields
import shop.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=250)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='content/account_image/')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', shop.models.AccountManager()),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('start_at', models.DateTimeField(default=datetime.datetime.today)),
                ('finish_at', models.DateTimeField(default=datetime.datetime.today)),
            ],
            options={
                'verbose_name': 'Action',
                'verbose_name_plural': 'Actions',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('enabled', models.BooleanField(default=1)),
                ('source_id', models.CharField(blank=True, max_length=300, null=True)),
                ('wait_list', models.BooleanField(default=0)),
                ('is_recommended', models.BooleanField(default=0)),
                ('sort_index', models.IntegerField(default=999)),
                ('source_type', models.CharField(default='1C', max_length=250)),
                ('gallery_attribute', models.CharField(default='article', max_length=250)),
                ('gallery_name', models.CharField(blank=True, max_length=250, null=True)),
                ('kind', models.CharField(default='secondary', max_length=250)),
                ('brand_image', models.ImageField(blank=True, null=True, upload_to='content/brand_image/')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='CatalogCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.CharField(blank=True, max_length=300, null=True)),
                ('enabled', models.BooleanField(default=1)),
                ('sort_index', models.IntegerField(default=999)),
                ('content_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=500)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent_id', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='shop.catalogcategory')),
            ],
            options={
                'verbose_name': 'CatalogCategory',
                'verbose_name_plural': 'CatalogCategories',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('url', models.SlugField(max_length=250, unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Constant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250)),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Constant',
                'verbose_name_plural': 'Constant',
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.SlugField(max_length=300, unique=True)),
                ('created_date', models.DateTimeField(default=datetime.datetime.today)),
                ('updated_date', models.DateTimeField(default=datetime.datetime.today)),
                ('published', models.BooleanField(default=0)),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='content/main_image/')),
                ('title', models.CharField(max_length=500, null=True)),
                ('intro_text', models.CharField(max_length=1000, null=True)),
                ('full_text', models.TextField(null=True)),
                ('meta_tag_title', models.CharField(blank=True, max_length=500, null=True)),
                ('meta_tag_description', models.CharField(blank=True, max_length=500, null=True)),
                ('meta_tag_keyword', models.CharField(blank=True, max_length=500, null=True)),
                ('geo', models.CharField(blank=True, max_length=250, null=True)),
                ('category_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='content_category', to='shop.category')),
            ],
            options={
                'verbose_name': 'Content',
                'verbose_name_plural': 'Contents',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250)),
                ('name', models.CharField(max_length=250)),
                ('title', models.CharField(max_length=250)),
                ('source_id', models.CharField(blank=True, max_length=300, null=True)),
                ('rate', models.DecimalField(decimal_places=5, max_digits=15)),
                ('mult', models.IntegerField()),
                ('name_eng', models.CharField(blank=True, max_length=250)),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, null=True)),
                ('name', models.CharField(max_length=300)),
                ('sale_policy', models.CharField(blank=True, max_length=250, null=True)),
                ('city', models.CharField(blank=True, max_length=250, null=True)),
                ('region_id', models.IntegerField(blank=True, null=True)),
                ('source_id', models.CharField(blank=True, max_length=300, null=True)),
                ('no_show_balance', models.BooleanField(default=0)),
                ('deficit_available', models.BooleanField(default=0)),
                ('online_reserve', models.BooleanField(default=0)),
                ('main_customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.customer')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='CustomerAgreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=250, null=True)),
                ('name', models.CharField(max_length=250)),
                ('number', models.CharField(blank=True, max_length=250, null=True)),
                ('is_status', models.BooleanField()),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('is_active', models.BooleanField(default=1)),
                ('source_id', models.CharField(blank=True, max_length=300, null=True)),
                ('api_available', models.BooleanField(default=0)),
                ('api_token', models.CharField(blank=True, max_length=250, null=True)),
                ('api_user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('currency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agreement_currency', to='shop.currency')),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agreement_customer', to='shop.customer')),
            ],
            options={
                'verbose_name': 'CustomerAgreement',
                'verbose_name_plural': 'CustomerAgreements',
            },
        ),
        migrations.CreateModel(
            name='CustomerPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('source_id', models.CharField(blank=True, max_length=300, null=True)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='point_customer', to='shop.customer')),
            ],
            options={
                'verbose_name': 'CustomerPoint',
                'verbose_name_plural': 'CustomerPoints',
            },
        ),
        migrations.CreateModel(
            name='DeliveryCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(blank=True, max_length=250, null=True)),
                ('ref', models.CharField(blank=True, max_length=250, null=True)),
                ('name', models.CharField(max_length=250)),
                ('create_date', models.DateTimeField(default=datetime.datetime.today)),
                ('update_date', models.DateTimeField(default=datetime.datetime.today)),
            ],
            options={
                'verbose_name': 'DeliveryCity',
                'verbose_name_plural': 'DeliveryCities',
            },
        ),
        migrations.CreateModel(
            name='DeliveryMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=250, null=True)),
                ('region_available', models.TextField(blank=True, null=True)),
                ('name', models.CharField(max_length=250)),
                ('comment', models.TextField(blank=True, null=True)),
                ('red', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'DeliveryMethod',
                'verbose_name_plural': 'DeliveryMethods',
            },
        ),
        migrations.CreateModel(
            name='DeliveryPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(blank=True, max_length=250, null=True)),
                ('ref', models.CharField(blank=True, max_length=250, null=True)),
                ('name', models.CharField(max_length=250)),
                ('longitude', models.CharField(blank=True, max_length=250, null=True)),
                ('latitude', models.CharField(blank=True, max_length=250, null=True)),
                ('max_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('city_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='point_city', to='shop.deliverycity')),
            ],
            options={
                'verbose_name': 'DeliveryPoint',
                'verbose_name_plural': 'DeliveryPoints',
            },
        ),
        migrations.CreateModel(
            name='DeliveryService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('has_to_door', models.BooleanField(default=0)),
                ('parameters', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'DeliveryService',
                'verbose_name_plural': 'DeliveryService',
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inner_name', models.CharField(max_length=250)),
                ('name', models.CharField(blank=True, max_length=250)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('skype', models.CharField(blank=True, max_length=250)),
                ('comment', models.CharField(blank=True, max_length=500)),
                ('source_id', models.CharField(blank=True, max_length=300)),
            ],
            options={
                'verbose_name': 'Manager',
                'verbose_name_plural': 'Managers',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Offer', max_length=300)),
                ('group', models.CharField(blank=True, max_length=300, null=True)),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('source_id', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'verbose_name': 'Offer',
                'verbose_name_plural': 'Offers',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complete', models.BooleanField(default=0)),
                ('create_date', models.DateTimeField(default=datetime.datetime.today)),
                ('update_date', models.DateTimeField(default=datetime.datetime.today)),
                ('comment', models.TextField(blank=True, null=True)),
                ('delivery_contact', models.CharField(blank=True, max_length=250, null=True)),
                ('delivery_contact_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None)),
                ('order_number', models.CharField(blank=True, max_length=250, null=True)),
                ('waybill_number', models.CharField(blank=True, max_length=250, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=250, null=True)),
                ('source', models.CharField(default='site', max_length=250, null=True)),
                ('is_pay_on_delivery', models.BooleanField(default=0)),
                ('pay_on_delivery_sum', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('import_reason', models.TextField(blank=True, null=True)),
                ('import_status', models.CharField(blank=True, max_length=250, null=True)),
                ('partner_code', models.CharField(blank=True, max_length=250, null=True)),
                ('declared_sum', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('declared_currency', models.BooleanField(default=1)),
                ('source_type', models.CharField(default='B2B', max_length=250, null=True)),
                ('delivery_contact_surname', models.CharField(max_length=250, null=True)),
                ('declaration_number', models.CharField(blank=True, max_length=250, null=True)),
                ('delivery_contact_middlename', models.CharField(blank=True, max_length=250, null=True)),
                ('delivery_is_invoice_off', models.BooleanField(default=1)),
                ('agreement_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_agreement', to='shop.customeragreement')),
                ('delivery_city_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_del_city', to='shop.deliverycity')),
                ('delivery_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_delivery', to='shop.deliverymethod')),
                ('delivery_point_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_del_point', to='shop.deliverypoint')),
                ('delivery_service_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_del_point', to='shop.deliveryservice')),
                ('point_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_customer_point', to='shop.customerpoint')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.customer')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
            },
        ),
        migrations.CreateModel(
            name='PartnerApi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50)),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('token', models.CharField(blank=True, max_length=250, null=True)),
                ('margin', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('percent_prepayment', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('show_branch', models.BooleanField(default=1)),
                ('enabled', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name': 'PartnerApi',
                'verbose_name_plural': 'PartnerApis',
            },
        ),
        migrations.CreateModel(
            name='PartnerCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('response_date', models.DateTimeField(default=datetime.datetime.today)),
                ('parent_id', models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.partnercategory')),
                ('partner_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_partner', to='shop.partnerapi')),
            ],
            options={
                'verbose_name': 'PartnerCategory',
                'verbose_name_plural': 'PartnerCategories',
            },
        ),
        migrations.CreateModel(
            name='PriceCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inner_name', models.CharField(default='PriceCategory', max_length=250)),
                ('source_id', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'verbose_name': 'PriceCategory',
                'verbose_name_plural': 'PriceCategories',
            },
        ),
        migrations.CreateModel(
            name='PriceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('source_id', models.CharField(blank=True, max_length=300, null=True)),
                ('enabled', models.BooleanField(default=1)),
                ('sort_index', models.IntegerField(default=999, null=True)),
                ('access_policy_data', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'PriceType',
                'verbose_name_plural': 'PriceTypes',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specification', models.CharField(max_length=250, null=True)),
                ('article', models.CharField(max_length=250, null=True)),
                ('source_id', models.CharField(blank=True, max_length=300, null=True)),
                ('search_key', models.CharField(blank=True, max_length=250, null=True)),
                ('sort_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15)),
                ('is_active', models.BooleanField(default=1)),
                ('weight', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15)),
                ('pack_qty', models.IntegerField(blank=True, default=0)),
                ('ABC', models.CharField(blank=True, max_length=1, null=True)),
                ('is_exists', models.BooleanField(default=0)),
                ('code', models.CharField(blank=True, max_length=250, null=True)),
                ('source_type', models.CharField(blank=True, default='1C', max_length=250, null=True)),
                ('product_type', models.IntegerField(blank=True, null=True)),
                ('delete_flag', models.BooleanField(default=0)),
                ('advanced_description', models.TextField(blank=True, null=True, verbose_name='Advanced description')),
                ('name', models.CharField(default='Product', max_length=500)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('keywords', models.CharField(blank=True, max_length=500, null=True)),
                ('brand_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.brand')),
                ('category_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.catalogcategory')),
                ('offer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.offer')),
                ('price_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.pricecategory')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='RatingStar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveSmallIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'RatingStar',
                'verbose_name_plural': 'RatingStars',
                'ordering': ['-value'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
            },
        ),
        migrations.CreateModel(
            name='RunString',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=datetime.datetime.today)),
                ('updated_date', models.DateTimeField(default=datetime.datetime.today)),
                ('full_text', models.CharField(max_length=1000)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('published', models.BooleanField(default=0)),
            ],
            options={
                'verbose_name': 'RunString',
                'verbose_name_plural': 'RunStrings',
            },
        ),
        migrations.CreateModel(
            name='ScenarioPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_policy', models.CharField(blank=True, max_length=250, null=True)),
                ('deficit_available', models.BooleanField(default=0, null=True)),
                ('online_reserve', models.BooleanField(default=0, null=True)),
                ('online_order', models.BooleanField(default=0, null=True)),
            ],
            options={
                'verbose_name': 'ScenarioPolicy',
                'verbose_name_plural': 'ScenarioPolicies',
            },
        ),
        migrations.CreateModel(
            name='SearchRequestBufferIgnore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_keyword_clean', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'SearchRequestBufferIgnore',
                'verbose_name_plural': 'SearchRequestBufferIgnores',
            },
        ),
        migrations.CreateModel(
            name='UploadProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_id', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(default=datetime.datetime.today)),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('article', models.CharField(blank=True, max_length=300, null=True)),
                ('search_key', models.CharField(blank=True, max_length=300, null=True)),
                ('category', models.CharField(blank=True, max_length=300, null=True)),
                ('brand', models.CharField(blank=True, max_length=300, null=True)),
                ('comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('branch', models.CharField(blank=True, max_length=300, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('supply', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'verbose_name': 'UploadProduct',
                'verbose_name_plural': 'UploadProducts',
            },
        ),
        migrations.CreateModel(
            name='WaitList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_add', models.DateTimeField(default=datetime.datetime.today)),
                ('send_message', models.BooleanField(default=0)),
                ('is_active', models.BooleanField(default=0)),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wait_list_product', to='shop.product')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'WaitList',
                'verbose_name_plural': 'WaitLists',
            },
        ),
        migrations.CreateModel(
            name='UserRequestType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('manager_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_request_manager', to='shop.manager')),
            ],
            options={
                'verbose_name': 'UserRequestType',
                'verbose_name_plural': 'UserRequestTypes',
            },
        ),
        migrations.CreateModel(
            name='UserRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=250, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('request_type_id', models.IntegerField(blank=True, null=True)),
                ('source_id', models.CharField(blank=True, max_length=300, null=True)),
                ('checked', models.BooleanField(default=0)),
                ('date_request', models.DateTimeField(default=datetime.datetime.today)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserRequest',
                'verbose_name_plural': 'UserRequests',
            },
        ),
        migrations.CreateModel(
            name='UploadSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, max_length=250, null=True)),
                ('first_row', models.IntegerField(blank=True, null=True)),
                ('mapping', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('rate', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True)),
                ('encoding', models.CharField(blank=True, max_length=250, null=True)),
                ('compare_name', models.IntegerField(blank=True, null=True)),
                ('partner_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upload_setting_partner', to='shop.partnerapi')),
            ],
            options={
                'verbose_name': 'UploadSetting',
                'verbose_name_plural': 'UploadSettings',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=300)),
                ('created_at', models.DateTimeField(default=datetime.datetime.today)),
                ('type', models.SmallIntegerField(blank=True, null=True)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_name', models.CharField(default='Stock', max_length=300)),
                ('amount_total', models.IntegerField(default=0)),
                ('amount_account', models.IntegerField(default=0)),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'Stock',
                'verbose_name_plural': 'Stocks',
            },
        ),
        migrations.CreateModel(
            name='SendPriceBuffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_email', models.CharField(blank=True, max_length=250, null=True)),
                ('agreement_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='send_price_buffer_agreement', to='shop.customeragreement')),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='send_price_buffer_customer', to='shop.customer')),
            ],
            options={
                'verbose_name': 'SendPriceBuffer',
                'verbose_name_plural': 'SendPriceBuffers',
            },
        ),
        migrations.CreateModel(
            name='SearchRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_keyword', models.CharField(blank=True, max_length=250, null=True)),
                ('search_keyword_clean', models.CharField(blank=True, max_length=250, null=True)),
                ('is_result', models.BooleanField(default=0, null=True)),
                ('product_list', models.TextField(blank=True, null=True)),
                ('is_added_in_cart', models.BooleanField(default=0, null=True)),
                ('product_add_in_cart', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(default=datetime.datetime.today)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ScenarioPolicy',
                'verbose_name_plural': 'ScenarioPolicies',
            },
        ),
        migrations.CreateModel(
            name='SaleTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_task_customer', to='shop.customer')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_task_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'SaleTask',
                'verbose_name_plural': 'SaleTasks',
            },
        ),
        migrations.CreateModel(
            name='SaleProductRelated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('related_product_id', models.IntegerField(blank=True, null=True)),
                ('qty_index', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('calculation_type', models.CharField(blank=True, max_length=250, null=True)),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_related_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'SaleProductRelated',
                'verbose_name_plural': 'SaleProductRelateds',
            },
        ),
        migrations.CreateModel(
            name='SaleHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_history_customer', to='shop.customer')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_history_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'SaleHistory',
                'verbose_name_plural': 'SaleHistories',
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(default=datetime.datetime.today)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_customer', to='shop.customer')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'Sale',
                'verbose_name_plural': 'Sales',
            },
        ),
        migrations.CreateModel(
            name='ReviewProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=250)),
                ('text', models.TextField(max_length=5000)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.reviewproduct')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
            options={
                'verbose_name': 'ReviewProduct',
                'verbose_name_plural': 'ReviewProducts',
            },
        ),
        migrations.CreateModel(
            name='ReviewContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=250)),
                ('text', models.TextField(max_length=5000)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.content')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.reviewcontent')),
            ],
            options={
                'verbose_name': 'ReviewContent',
                'verbose_name_plural': 'ReviewContents',
            },
        ),
        migrations.CreateModel(
            name='RatingProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=50)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
                ('star', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.ratingstar')),
            ],
            options={
                'verbose_name': 'RatingProduct',
                'verbose_name_plural': 'RatingProducts',
            },
        ),
        migrations.CreateModel(
            name='RatingContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=50)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.content')),
                ('star', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.ratingstar')),
            ],
            options={
                'verbose_name': 'RatingContent',
                'verbose_name_plural': 'RatingContents',
            },
        ),
        migrations.CreateModel(
            name='PromoSale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=300, null=True)),
                ('is_visible', models.BooleanField(default=0)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promo_sale_customer', to='shop.customer')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='promo_sale_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'PromoSale',
                'verbose_name_plural': 'PromoSales',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='ProductImage', max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='product/product_image/')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.product')),
            ],
            options={
                'verbose_name': 'ProductImage',
                'verbose_name_plural': 'ProductImages',
            },
        ),
        migrations.CreateModel(
            name='ProductErrorStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('status', models.CharField(max_length=250)),
                ('created_date', models.DateTimeField(default=datetime.datetime.today)),
                ('updated_date', models.DateTimeField(default=datetime.datetime.today)),
                ('admin_comment', models.CharField(blank=True, max_length=1000, null=True)),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_error_product', to='shop.product')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ProductErrorStatistic',
                'verbose_name_plural': 'ProductErrorStatistics',
            },
        ),
        migrations.CreateModel(
            name='ProductDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property', models.CharField(blank=True, max_length=500, null=True)),
                ('value', models.CharField(blank=True, max_length=500, null=True)),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='description_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'ProductDescription',
                'verbose_name_plural': 'ProductDescriptions',
            },
        ),
        migrations.CreateModel(
            name='ProductApplicability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle', models.CharField(blank=True, max_length=250, null=True)),
                ('modification', models.CharField(blank=True, max_length=250, null=True)),
                ('engine', models.CharField(blank=True, max_length=250, null=True)),
                ('year', models.CharField(blank=True, max_length=250, null=True)),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applicability_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'ProductApplicability',
                'verbose_name_plural': 'ProductApplicabilitys',
            },
        ),
        migrations.CreateModel(
            name='ProductApiMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(blank=True, max_length=250, null=True)),
                ('partner_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='partner_api_map', to='shop.partnerapi')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_api_map', to='shop.product')),
            ],
            options={
                'verbose_name': 'ProductApiMap',
                'verbose_name_plural': 'ProductApiMaps',
            },
        ),
        migrations.CreateModel(
            name='PriceBuffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250)),
                ('category', models.CharField(blank=True, max_length=250, null=True)),
                ('specification', models.CharField(blank=True, max_length=250, null=True)),
                ('article', models.CharField(blank=True, max_length=250, null=True)),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('currency', models.CharField(blank=True, max_length=250, null=True)),
                ('rest', models.IntegerField(blank=True, null=True)),
                ('sort_index', models.CharField(blank=True, max_length=300, null=True)),
                ('pack_qty', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(default=datetime.datetime.today)),
                ('agreement_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price_buffer_agreement', to='shop.customeragreement')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price_buffer_brand', to='shop.brand')),
                ('price_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price_buffer_price_category', to='shop.pricecategory')),
            ],
            options={
                'verbose_name': 'PriceBuffer',
                'verbose_name_plural': 'PriceBuffers',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price_currency', to='shop.currency')),
                ('price_type_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price_price_type', to='shop.pricetype')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='price_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'Price',
                'verbose_name_plural': 'Prices',
            },
        ),
        migrations.CreateModel(
            name='PartnerStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(blank=True, max_length=250, null=True)),
                ('qty', models.IntegerField(default=0)),
                ('supply_date', models.DateField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('partner_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stock_partner', to='shop.partnerapi')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_partner', to='shop.product')),
            ],
            options={
                'verbose_name': 'PartnerStock',
                'verbose_name_plural': 'PartnerStocks',
            },
        ),
        migrations.CreateModel(
            name='PartnerCategoryCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_date', models.DateTimeField(default=datetime.datetime.today)),
                ('product_json', models.TextField(blank=True, null=True)),
                ('category_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_cache_category', to='shop.partnercategory')),
                ('partner_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_cache_partner', to='shop.partnerapi')),
            ],
            options={
                'verbose_name': 'PartnerCategoryCache',
                'verbose_name_plural': 'PartnerCategoryCaches',
            },
        ),
        migrations.CreateModel(
            name='PartnerApiCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_number', models.CharField(blank=True, max_length=250, null=True)),
                ('response_date', models.DateTimeField(default=datetime.datetime.today)),
                ('product_json', models.TextField(blank=True, null=True)),
                ('partner_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='apicache_partner', to='shop.partnerapi')),
            ],
            options={
                'verbose_name': 'PartnerApiCache',
                'verbose_name_plural': 'PartnerApiCaches',
            },
        ),
        migrations.CreateModel(
            name='OrderSourceStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.CharField(blank=True, max_length=250, null=True)),
                ('add_date', models.DateTimeField(default=datetime.datetime.today)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_statistic_customer', to='shop.customer')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_statistic_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'OrderSourceStatistic',
                'verbose_name_plural': 'OrderSourceStatistics',
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('date_payment', models.DateTimeField(default=datetime.datetime.today)),
                ('payment_sum', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('receiver_commission', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('sender_commission', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('currency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_payment_currency', to='shop.currency')),
                ('order_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_payment_order', to='shop.order')),
            ],
            options={
                'verbose_name': 'OrderPayment',
                'verbose_name_plural': 'OrderPayments',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(blank=True, default=0, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=15, null=True)),
                ('source', models.CharField(blank=True, max_length=250, null=True)),
                ('reserved', models.IntegerField(blank=True, null=True)),
                ('executed', models.IntegerField(blank=True, null=True)),
                ('old_qty', models.IntegerField(blank=True, null=True)),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('purchase_qty', models.IntegerField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('purchase_currency_id', models.IntegerField(blank=True, null=True)),
                ('purchase_order_id', models.IntegerField(blank=True, null=True)),
                ('purchase_item_id', models.IntegerField(blank=True, null=True)),
                ('partner_branch', models.CharField(blank=True, max_length=250, null=True)),
                ('currency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_item_currency', to='shop.currency')),
                ('order_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_item_order', to='shop.order')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_item_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'OrderItem',
                'verbose_name_plural': 'OrderItems',
            },
        ),
        migrations.CreateModel(
            name='DropshippingWalletTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sum', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('date', models.DateTimeField(default=datetime.datetime.today)),
                ('card', creditcards.models.CardNumberField(blank=True, max_length=25, null=True)),
                ('agreement_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='d_transfer_agreement', to='shop.customeragreement')),
                ('currency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='d_transfer_currency', to='shop.currency')),
                ('order_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='d_transfer_order', to='shop.order')),
            ],
            options={
                'verbose_name': 'DropshippingWalletTransfer',
                'verbose_name_plural': 'DropshippingWalletTransfers',
            },
        ),
        migrations.CreateModel(
            name='DropshippingWallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('debit', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('credit', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('agreement_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='d_wallet_agreement', to='shop.customeragreement')),
                ('currency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='d_wallet_currency', to='shop.currency')),
                ('order_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='d_wallet_order', to='shop.order')),
            ],
            options={
                'verbose_name': 'DropshippingWallet',
                'verbose_name_plural': 'DropshippingWallets',
            },
        ),
        migrations.AddField(
            model_name='deliverypoint',
            name='service_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='point_service', to='shop.deliveryservice'),
        ),
        migrations.AddField(
            model_name='deliverycity',
            name='service_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='city_service', to='shop.deliveryservice'),
        ),
        migrations.CreateModel(
            name='DeficitReserve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sale_policy', models.CharField(blank=True, max_length=250, null=True)),
                ('amount', models.IntegerField(default=0)),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deficit_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'DeficitReserve',
                'verbose_name_plural': 'DeficitReserves',
            },
        ),
        migrations.CreateModel(
            name='CustomerDiscount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('criteria_type', models.CharField(blank=True, max_length=250, null=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('agreement_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discount_customer_agreement', to='shop.customeragreement')),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discount_customer_customer', to='shop.customer')),
                ('price_type_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discount_customer_price_type', to='shop.pricetype')),
            ],
            options={
                'verbose_name': 'CustomerDiscount',
                'verbose_name_plural': 'CustomerDiscounts',
            },
        ),
        migrations.CreateModel(
            name='CustomerContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_user', models.BooleanField(default=1)),
                ('source_id', models.CharField(blank=True, max_length=300, null=True)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_customer', to='shop.customer')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CustomerContact',
                'verbose_name_plural': 'CustomerContacts',
            },
        ),
        migrations.CreateModel(
            name='CustomerCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('card', creditcards.models.CardNumberField(max_length=25)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_customer', to='shop.customer')),
            ],
            options={
                'verbose_name': 'CustomerCard',
                'verbose_name_plural': 'CustomerCard',
            },
        ),
        migrations.AddField(
            model_name='customeragreement',
            name='price_type_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agreement_price_type', to='shop.pricetype'),
        ),
        migrations.AddField(
            model_name='customer',
            name='manager_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_manager', to='shop.manager'),
        ),
        migrations.CreateModel(
            name='CrossErrorStatistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_number', models.CharField(max_length=1000)),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
                ('date', models.DateTimeField(default=datetime.datetime.today)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cross_error_customer', to='shop.customer')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cross_error_product', to='shop.product')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'CrossErrorStatistic',
                'verbose_name_plural': 'CrossErrorStatistics',
            },
        ),
        migrations.CreateModel(
            name='Cross',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_nr', models.CharField(blank=True, max_length=500, null=True)),
                ('search_nr', models.CharField(blank=True, max_length=500, null=True)),
                ('brand_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cross_brand', to='shop.brand')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cross_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'Cross',
                'verbose_name_plural': 'Crosses',
            },
        ),
        migrations.CreateModel(
            name='ContentImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='ContentImage', max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='content/content_image/')),
                ('content_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.content')),
            ],
            options={
                'verbose_name': 'ContentImage',
                'verbose_name_plural': 'ContentImages',
            },
        ),
        migrations.CreateModel(
            name='CategoryMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('category_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mapping_category', to='shop.partnercategory')),
                ('partner_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mapping_partner', to='shop.partnerapi')),
            ],
            options={
                'verbose_name': 'CategoryMapping',
                'verbose_name_plural': 'CategoryMappings',
            },
        ),
        migrations.CreateModel(
            name='CacheApi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_number', models.CharField(max_length=250)),
                ('response_api', models.TextField(blank=True, null=True)),
                ('response_date', models.DateTimeField(default=datetime.datetime.today)),
                ('partner_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cache_partner', to='shop.partnerapi')),
            ],
            options={
                'verbose_name': 'CacheApi',
                'verbose_name_plural': 'CacheApis',
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('past_due', models.DecimalField(decimal_places=2, max_digits=15)),
                ('agreement_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='balance_agreement', to='shop.customeragreement')),
                ('currency_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='balance_currency', to='shop.currency')),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='balance_customer', to='shop.customer')),
            ],
            options={
                'verbose_name': 'Balance',
                'verbose_name_plural': 'Balances',
            },
        ),
        migrations.CreateModel(
            name='ActionProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='action_product_action', to='shop.action')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='action_product_product', to='shop.product')),
            ],
            options={
                'verbose_name': 'ActionProduct',
                'verbose_name_plural': 'ActionProducts',
            },
        ),
        migrations.CreateModel(
            name='ActionCustomer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('win', models.BooleanField(default=0)),
                ('close_action', models.CharField(blank=True, max_length=1000, null=True)),
                ('action_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='action_customer_action', to='shop.action')),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='action_customer_customer', to='shop.customer')),
            ],
            options={
                'verbose_name': 'ActionCustomer',
                'verbose_name_plural': 'ActionCustomers',
            },
        ),
        migrations.AddField(
            model_name='action',
            name='content_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='action_content', to='shop.content'),
        ),
        migrations.AddField(
            model_name='account',
            name='customer_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.customer'),
        ),
        migrations.AddField(
            model_name='account',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='account',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
